!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";const e=["M -207.431 192.293 C -181.046 314.653 277.653 213.013 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z","M -207.431 192.293 C -187.586 359.223 248.038 192.293 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z","M -207.431 192.293 C -100.72 221.893 27.276 275.183 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z","M -207.431 192.293 C 34.21 187.353 29.014 275.183 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z","M -207.431 192.293 C 34.21 187.353 195.487 273.736 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z","M -207.431 192.293 C -150.618 212.979 -121.29 184.015 57.844 240.874 C 145.606 268.731 240.964 222.885 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z","M -207.431 192.293 C -207.431 192.293 -159.918 195.427 -66.187 220.165 C 54.525 252.025 240.964 222.885 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z","M -207.431 192.293 C -207.431 192.293 -159.918 195.427 -66.187 220.165 C -5.506 236.181 73.039 214.605 140.205 229.533 C 220.559 247.392 266.905 207.507 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z","M -207.431 192.293 C -207.431 192.293 -162.783 228.328 -66.187 220.165 C 38.011 211.359 79.012 198.076 140.205 229.533 C 212.064 266.473 266.905 207.507 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z","M -207.431 192.293 C -207.431 192.293 -102.255 248.661 -5.659 240.498 C 98.539 231.692 121.454 182.34 182.647 213.797 C 254.506 250.737 266.905 207.507 292.569 192.293 L 292.569 292.293 L -207.431 292.293 L -207.431 192.293 Z"],t=["M 0 177.778 C 0 177.778 240 213.333 360 225.167 C 480 237.222 600 242.778 720 240 C 840 237.222 960 225 1080 210.389 C 1200 195.556 1440 160 1440 160 L 1440 320 L 0 320 L 0 177.778 Z","M 0 177.778 C 0 177.778 152.333 246.166 360 225.167 C 479.99 213.015 600 242.778 720 240 C 840 237.222 960 225 1080 210.389 C 1200 195.556 1440 160 1440 160 L 1440 320 L 0 320 L 0 177.778 Z","M 0 177.778 C 0 177.778 160.272 165.64 360 225.167 C 478.98 260.628 587.584 185.149 712.604 195.779 C 837.624 206.409 1008.755 296.934 1182.348 206.105 C 1289.482 150.049 1440 160 1440 160 L 1440 320 L 0 320 L 0 177.778 Z","M 0 177.778 C -0.427 177.524 507.134 139.697 712.604 195.779 C 918.074 251.861 984.272 260.415 1182.348 206.105 C 1298.957 174.132 1440 160 1440 160 L 1440 320 L 0 320 L 0 177.778 Z","M 0 177.778 C -0.427 177.524 217.116 146.351 422.586 202.433 C 628.056 258.515 984.272 260.415 1182.348 206.105 C 1298.957 174.132 1440 160 1440 160 L 1440 320 L 0 320 L 0 177.778 Z","M 0 177.778 C -0.427 177.524 79.116 264.582 422.586 202.433 C 766.056 140.284 984.272 260.415 1182.348 206.105 C 1298.957 174.132 1440 160 1440 160 L 1440 320 L 0 320 L 0 177.778 Z","M 0 177.778 C -0.427 177.524 79.116 264.582 422.586 202.433 C 766.056 140.284 812.939 190.347 1017.833 204.571 C 1162.904 214.642 1440 160 1440 160 L 1440 320 L 0 320 L 0 177.778 Z","M 0 196.617 C -0.427 196.363 103.505 127.431 392.253 207.335 C 681.001 287.239 812.939 190.347 1017.833 204.571 C 1162.904 214.642 1440 160 1440 160 L 1440 320 L 0 320 L 0 196.617 Z","M 0 185.891 C -0.427 185.637 321.963 226.093 452.388 208.52 C 582.813 190.947 532.069 160 894.881 188.712 C 1258.553 217.492 1440 160 1440 160 L 1440 320 L 0 320 L 0 185.891 Z","M 0 185.891 C -0.427 185.637 243.238 213.446 373.663 195.873 C 504.088 178.3 758.167 162.183 1120.979 190.895 C 1484.651 219.675 1440 160 1440 160 L 1440 320 L 0 320 L 0 185.891 Z","M 0 185.891 C -0.427 185.637 180.134 245.643 310.559 228.07 C 440.984 210.497 758.167 162.183 1120.979 190.895 C 1484.651 219.675 1440 160 1440 160 L 1440 320 L 0 320 L 0 185.891 Z","M 0 185.891 C -0.427 185.637 610.059 207.245 972.871 235.957 C 1336.543 264.737 1440 160 1440 160 L 1440 320 L 0 320 L 0 185.891 Z","M 0 160 C -0.427 159.746 74.038 222.359 292.42 216.4 C 644.741 206.787 1440 160 1440 160 L 1440 320 L 0 320 L 0 160 Z","M 0 160 C -0.427 159.746 194.066 225.589 409.217 187.689 C 566.403 160 1440 160 1440 160 L 1440 320 L 0 320 L 0 160 Z","M 0 160 C -0.427 159.746 201.353 314.139 414.923 268.16 C 917.317 160 1440 160 1440 160 L 1440 320 L 0 320 L 0 160 Z"];function L(e){for(let t=e.length-1;t>0;t--){const L=Math.floor(Math.random()*(t+1));[e[t],e[L]]=[e[L],e[t]]}return e}class C extends HTMLElement{constructor(){super()}connectedCallback(){let C=this.className,n=this.id,i=this.getAttribute("style"),s=this.getAttribute("data-wave-face"),r="right"==s,o="bottom"==s,a="left"==s||"right"==s;this.getAttributeNode("data-wave-observe")&&function(C,n){const i=document.createElement("a");C.insertAdjacentElement("beforebegin",i),new IntersectionObserver((([C])=>{C.isVisible||C.target.nextElementSibling.children[0].setAttribute("d",n?L(e)[0]:L(t)[0])}),{rootMargin:"200px 0px 200px 0px"}).observe(i)}(this,a),this.outerHTML=`\n          <svg viewBox="${a?"0 0 100 500":"0 160 1440 160"}" preserveAspectRatio="none" class="${C||""}" style="${r?"transform:scaleX(-1);":""}${o?"transform:scaleY(-1);":""}${i||""}" ${n?`id="${n}"`:""} aria-hidden="true" role="img">\n            <path d="${a?L(e)[0]:L(t)[0]}" style="stroke: none; fill: inherit" ${a?'transform="matrix(-0.000001, -1, 1, -0.000001, -192.292949, 292.569243)"':""}></path>\n          </svg>\n        `}}customElements.define("dynamo-wave",C)}));

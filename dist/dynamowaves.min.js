!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";class t extends HTMLElement{constructor(){super(),this.isAnimating=!1,this.animationFrameId=null,this.elapsedTime=0,this.startTime=null,this.isGeneratingWave=!1,this.currentPath=null,this.targetPath=null,this.pendingTargetPath=null,this.intersectionObserver=null,this.observerOptions=null}connectedCallback(){const t=this.className,e=this.id??Math.random().toString(36).substring(7),s=this.getAttribute("style"),n=this.getAttribute("data-wave-face")||"top";this.points=parseInt(this.getAttribute("data-wave-points"))||6,this.variance=parseFloat(this.getAttribute("data-variance"))||3,this.duration=parseFloat(this.getAttribute("data-wave-speed"))||7500,this.vertical="left"===n||"right"===n;const a="right"===n,h="bottom"===n;this.width=this.vertical?160:1440,this.height=this.vertical?1440:160,this.currentPath=i({width:this.width,height:this.height,points:this.points,variance:this.variance,vertical:this.vertical}),this.targetPath=i({width:this.width,height:this.height,points:this.points,variance:this.variance,vertical:this.vertical}),this.innerHTML=`\n      <svg \n        viewBox="${this.vertical?"0 0 160 1440":"0 0 1440 160"}"\n        preserveAspectRatio="none"\n        class="${t||""}"\n        style="${a?"transform:scaleX(-1);":""}${h?"transform:scaleY(-1);":""}${s||""}"\n        id="${e}"\n        aria-hidden="true"\n        role="img"\n      >\n        <path d="${this.currentPath}" style="stroke:inherit; fill: inherit"></path>\n      </svg>\n    `,this.svg=this.querySelector("svg"),this.path=this.querySelector("path"),this.play=this.play.bind(this),this.pause=this.pause.bind(this),this.generateNewWave=this.generateNewWave.bind(this);const r=this.getAttribute("data-wave-observe");r&&this.setupIntersectionObserver(r),"true"===this.getAttribute("data-wave-animate")&&(window.matchMedia("(prefers-reduced-motion: reduce)").matches||this.play())}play(t=null){if(this.isAnimating)return;this.isAnimating=!0;const e=t||this.duration,s=()=>{this.pendingTargetPath||(this.pendingTargetPath=i({width:this.width,height:this.height,points:this.points,variance:this.variance,vertical:this.vertical})),this.animateWave(e,(()=>{this.currentPath=this.targetPath,this.targetPath=this.pendingTargetPath,this.pendingTargetPath=i({width:this.width,height:this.height,points:this.points,variance:this.variance,vertical:this.vertical}),this.isAnimating&&s()}))};s()}pause(){this.isAnimating&&(this.isAnimating=!1,cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null,this.elapsedTime+=performance.now()-(this.startTime||performance.now()),this.startTime=null)}disconnectedCallback(){this.intersectionObserver&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null)}setupIntersectionObserver(t){const[i,e="0px"]=t.split(":"),s="once"===i;this.observerOptions={root:null,rootMargin:e,threshold:0},this.intersectionObserver=new IntersectionObserver((t=>{t.forEach((t=>{t.isIntersecting||(this.generateNewWave(),s&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null))}))}),this.observerOptions),this.intersectionObserver.observe(this)}generateNewWave(t=800){this.isGeneratingWave||this.animationFrameId||(t<1&&(t=1),this.isGeneratingWave=!0,this.pendingTargetPath=i({width:this.width,height:this.height,points:this.points,variance:this.variance,vertical:this.vertical}),this.animateWave(t,(()=>{this.currentPath=this.targetPath,this.targetPath=this.pendingTargetPath,this.pendingTargetPath=null,this.isGeneratingWave=!1,this.animationFrameId=null})))}animateWave(t,s=null){const n=e(this.currentPath),a=e(this.targetPath);if(n.length!==a.length)return console.error("Point mismatch! Regenerating waves to ensure consistency."),this.currentPath=i({width:this.width,height:this.height,points:this.points,variance:this.variance,vertical:this.vertical}),void(this.targetPath=i({width:this.width,height:this.height,points:this.points,variance:this.variance,vertical:this.vertical}));const h=i=>{this.startTime||(this.startTime=i-this.elapsedTime);const e=i-this.startTime,r=Math.min(e/t,1),c=function(t,i,e,s=!1,n,a){const h=t.map(((t,n)=>{const a=i[n];return{cpX:t.cpX+(a.cpX-t.cpX)*e,cpY:s?t.cpY:t.cpY+(a.cpY-t.cpY)*e,x:s?t.x+(a.x-t.x)*e:t.x,y:s?t.y:t.y+(a.y-t.y)*e}}));let r=s?`M ${a} ${n} L ${h[0].x} ${n}`:`M 0 ${n} L 0 ${h[0].y}`;for(let t=0;t<h.length;t++){const{cpX:i,cpY:e,x:s,y:n}=h[t];r+=` Q ${i} ${e}, ${s} ${n}`}return r+=s?` L 0 0 L ${a} 0 L ${a} ${n} Z`:` L ${a} ${n} Z`,r}(n,a,r,this.vertical,this.height,this.width);this.path.setAttribute("d",c),r<1?this.animationFrameId=requestAnimationFrame(h):(this.elapsedTime=0,this.startTime=null,s&&s())};this.animationFrameId=requestAnimationFrame(h)}}function i({width:t,height:i,points:e,variance:s,vertical:n=!1}){const a=[],h=n?i/(e-1):t/(e-1);for(let r=0;r<e;r++){const e=n?i-h*r:h*r,c=n?t-.1*t-Math.random()*(s*t*.25):i-.1*i-Math.random()*(s*i*.25);a.push(n?{x:c,y:e}:{x:e,y:c})}let r=n?`M ${t} ${i} L ${a[0].x} ${i}`:`M 0 ${i} L 0 ${a[0].y}`;for(let t=0;t<a.length-1;t++){const i=a[t],e=a[t+1],s=(i.x+e.x)/2,n=(i.y+e.y)/2;r+=` Q ${i.x} ${i.y}, ${s} ${n}`}const c=a[a.length-1];return r+=n?` Q ${c.x} ${c.y}, 0 0 L ${t} 0 L ${t} ${i} Z`:` Q ${c.x} ${c.y}, ${t} ${c.y} L ${t} ${i} Z`,r}function e(t){const i=[],e=/Q\s([\d.]+)\s([\d.]+),\s([\d.]+)\s([\d.]+)/g;let s;for(;null!==(s=e.exec(t));)i.push({cpX:parseFloat(s[1]),cpY:parseFloat(s[2]),x:parseFloat(s[3]),y:parseFloat(s[4])});return i}customElements.define("dynamo-wave",t)}));
